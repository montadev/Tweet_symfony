security:
    access_decision_manager:
        strategy: affirmative
    encoders: 
        App\Entity\User: bcrypt
    providers:
        database_users:
            entity: {class: App\Entity\User,property: email} 
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            #pattern: ^/
            user_checker: App\Security\UserChecker
            

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            form_login: 
                check_path: security_login
                login_path: security_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: micro_post_index
                username_parameter: email
                password_parameter: password
                csrf_parameter: _csrf_token
            
            logout:
                path: security_logout
                target: micro_post_index    
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/micro-post, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER